name: Backend CI

on:
  push:
    paths:
      - 'backend/**'
  
jobs:
  test-lint:
    name: Testing and Linting
    runs-on: ubuntu-22.04
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Checkout
        uses: actions/checkout@v4
      - name: Create env files
        run: |
          touch .env
          echo JWT_SECRET=${{ secrets.JWT_SECRET }} >> backend/app/user/.env
          echo JWT_ALGO=${{ secrets.JWT_ALGO }} >> backend/app/user/.env
          cat .env
          touch backend.env
          echo DB_HOST=${{ secrets.DB_HOST }} >> env-dev/backend.env
          echo DB_NAME=${{ secrets.DB_NAME }} >> env-dev/backend.env
          echo DB_USER=${{ secrets.DB_USER }} >> env-dev/backend.env
          echo DB_PASS=${{ secrets.DB_PASS }} >> env-dev/backend.env
          echo DJANGO_SECRET=${{ secrets.DJANGO_SECRET }} >> env-dev/backend.env
          cat backend.env
          touch db.env
          echo POSTGRES_DB=${{ secrets.POSTGRES_DB }} >> env-dev/db.env
          echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> env-dev/db.env
          echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> env-dev/db.env
          cat db.env
      - name: Test
        run: docker-compose run --rm backend sh -c "wait-for-it --service db:5432 -- coverage run --source='.' manage.py test"
      - name: Upload coverage report
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Lint
        run: docker-compose run --rm backend sh -c "flake8"
